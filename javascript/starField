float x;
float y;
float radius=2;
float angle=.01;
boolean sw=false;
double pie = 0;
Particle[] particles;
color c1;
float xspeed;
float yspeed;
public void setup() {
  size(600, 600);
  particles = new Particle[1000];

  for ( int i = 0; i< particles.length; i++) {
    particles[1] = new Jumbo();
    particles[i]=new OddballParticle((float)(Math.random()*300)+20, (float)(Math.random()*300)+20);
    i++;
    particles[i]=new NormalParticle((float)(Math.random()*300)+20, (float)(Math.random()*300)+20);
  }



  //for ( int k = s.length-1; k< s.length; k++) {
  //  s[k] = new JumboParticle(pie);
  //  pie += Math.PI/6;
  //}
}
public void draw() {
  background(0);
  fill(0, 6);
  rect(0, 0, width, height);

  for (int i=0; i<particles.length; i++) {
    particles[i].show();
    particles[i].move();
    particles[i].randC();
  }
}

void mousePressed() {

  for (int i=0; i<particles.length; i++) {
    particles[i]=new NormalParticle(width/2, height/2);
    particles[i]=new OddballParticle(width/2, height/2);
  }
}
interface Particle {
  public void randC();
  public void move();
  public void show();

}
class NormalParticle implements Particle {
  public NormalParticle(){
  }
  float x;
  float y;
  double  angle=Math.random()*(2*Math.PI);//random direction
  //float xspeed=.01;
  //float yspeed=.02;
  float xspeed=(float)(Math.random()*4)-2;//random speed
  float yspeed=(float)(Math.random()*10)-5;


  color c1 = color((float)(Math.random()*255), (float)(Math.random()*255), 0);

  NormalParticle(float x, float y) {
    this.x=x;
    this.y=y;

    radius=(float)(Math.random()*7);
    //radius=(float)(Math.random()*200)-100;
  }
  public void show() {
    fill(c1);
    ellipse(x, y, 20, 20);
  }
  public void move() {

    x+=xspeed;
    y+=yspeed;
    x+=Math.cos(angle)*radius;
    y+=Math.sin(angle)*radius;

    angle+=.01;


    if (x>width-10) {
      x=width-10;
      xspeed*=-1;
      //angle*=-1;
    }
    if (x<10) {
      xspeed*=-1;
    }
    if (y>height-10) {
      y=height-10;
      yspeed*=-1;
    }
    if (y<10) {
      yspeed*=-1;
    }
  }
   void randC() {
     fill(100);
  }
}
class OddballParticle implements Particle {
  float x;
  float y;
  double  angle=Math.random()*(2*Math.PI);//random direction
  float xspeed=.6;
  float yspeed=.6;
  color c1 = color((float)(Math.random()*255), (float)(Math.random()*255), 0);
  OddballParticle(float x, float y) {
    this.x=x;
    this.y=y;
    radius=(float)(Math.random()*7);
    radius=(float)(Math.random()*200)-100;
  }
  public void show() {
    fill(c1);
    ellipse(x, y, 20, 20);
  }
  public void move() {

    x+=xspeed;
    y+=yspeed;
    x+=Math.cos(angle)*radius;
    y+=Math.sin(angle)*radius;

    angle+=.01;


    if (x>width-10) {
      x=width-10;
      xspeed*=-1;
      angle*=-1;
    }
    if (x<10) {
      xspeed*=-1;
    }
    if (y>height-10) {
      y=height-10;
      yspeed*=-1;
    }
    if (y<10) {
      yspeed*=-1;
    }
  }
   void randC() {
     
  }
}
class Jumbo extends NormalParticle 
{
    void show() 
    {
      ellipse(super.x,super.y, 100, 100);
    }
 

}
